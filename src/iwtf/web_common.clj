
;; ================================================================
;; 
;; ATTENTION: DO NOT EDIT THIS FILE DIRECTLY. 
;;
;;            Edit ../../org/iwtf.org instead. The content of this 
;;            source code file is generated from iwtf.org.
;;
;; ================================================================









;; The only reason to look at this generated code directly is if
;; you're curious about the output of the org literate workflow.



































;; You have been warned.
(ns iwtf.web-common
  (:require [seesaw.core :as ui]
            [seesaw.swingx :as ux]
            [seesaw.mig :as mig]
            [clj-time.core :as time]
            [clj-webdriver.core :as wd]
            [clj-webdriver.options :as co]
            [clj-webdriver.firefox :as ff])  
  (:use iwtf.config
        iwtf.locators))
(def ^:dynamic *browser*)

(defmacro trya [expr]
  `(try ~expr
        (catch Exception e# (ui/alert e#))))  

(def firebug-profile "/home/mint/workshop/iwtf/resources/firefox-profile.json")

(defn new-firefox-browser []
  (wd/new-driver {:browser :firefox
                  :profile (ff/profile-from-json (slurp firebug-profile))}))

(defn quit-browser [] (try (wd/quit *browser*)))

(defn- maybe-warn []
  (if (bound? #'iwtf.web-common/*browser*)
    (println "Warning: there might be an old browser already. Creating a new one anyway.")))

(defn- begin-helper [f]
  (maybe-warn)
  (alter-var-root #'iwtf.web-common/*browser* f))

(defn begin []
  (begin-helper (fn [_] (new-firefox-browser))))

(defn begin-np []
  (begin-helper (fn [_] (wd/new-driver {:browser :firefox}))))

(defn end [] (quit-browser))

(defn delete-all-cookies []
  (try (co/delete-all-cookies *browser*)))

;; see https://github.com/semperos/clj-webdriver/wiki/Snippets
;; Custom Firefox Profile with Custom Config
(def webdriver-nil #clj_webdriver.element.Element{:webelement nil})
(defn no-match [finding] (= finding webdriver-nil) )
(defn go
  "tells the browser to go to the specified :url.
  :delete-cookies defaults to true."
  [& {:keys [url delete-cookies]
      :or {delete-cookies true}}]
  (if delete-cookies (delete-all-cookies))
  (wd/get-url *browser* url))
